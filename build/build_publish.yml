variables:
    BuildConfiguration: Release
    NugetToolVersion: 5.6.0
    DotNetVersion: 3.1.x
    MonoVersion: 6_6_0

stages:
- stage: BuildApps
  jobs:
  - job: BuildXamarinApp
    displayName: Build XamTrack App
    pool:
      name: Hosted macOS
      vmImage: 'macOS-latest'
      demands:
      - MSBuild
      - Xamarin.Android
      - Xamarin.iOS
      
    steps:
    - task: Bash@3
      displayName: 'Set Mono Version $(MonoVersion)'
      inputs:
        targetType: 'inline'
        script: 'sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MonoVersion)'
    - task: Bash@3
      displayName: 'Update Constants'
      inputs:
        targetType: 'inline'
        script: |
          #REMEMBER TO SETUP PIPELINE VARIABLE
          if [ ! -n $(DpsIdScope) ]
          then
              echo "You need define the DpsIdScope variable in VSTS"
              exit
          fi
          
          #PATH TO CONSTANTS FILE
          APP_CONSTANT_FILE=XamTrack.Core/appconfig.json
          
          if [ -e "$APP_CONSTANT_FILE" ]
          then
              echo "Updating App Secret Values to DpsIdScope in appconfig.json"
              sed -i '' 's#"DpsIdScope": "[a-z:./\\_]*"#"DpsIdScope": "$(DpsIdScope)"#' $APP_CONSTANT_FILE
          
              echo "Updating App Secret Values to IotHubConnectionString in appconfig.json"
              sed -i '' 's#"IotHubConnectionString": "[a-z:./\\_]*"#"IotHubConnectionString": "$(IotHubConnectionString)"#' $APP_CONSTANT_FILE
          
              echo "Updating App Secret Values to DpsSymetricKey in appconfig.json"
              sed -i '' 's#"DpsSymetricKey": "[a-z:./\\_]*"#"DpsSymetricKey": "$(DpsSymetricKey)"#' $APP_CONSTANT_FILE
          
              echo "Updating App Secret Values to SharedKey in appconfig.json"
              sed -i '' 's#"SharedKey": "[a-z:./\\_]*"#"SharedKey": "$(SharedKey)"#' $APP_CONSTANT_FILE
          
              echo "File content:"
              cat $APP_CONSTANT_FILE
          fi

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: $(DotNetVersion)

    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetToolVersion)
      inputs:
        versionSpec: $(NugetToolVersion)

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: 'XamTrack.sln'

    - script: echo Build XamTrack Android!

    - task: XamarinAndroid@1
      displayName: 'Build XamTrack.Android App'
      inputs:
        projectFile: XamTrack.Android/XamTrack.Android.csproj
        configuration: '$(BuildConfiguration)'
        createAppPackage: true

    - task: AndroidSigning@3
      inputs:
        apkFiles: '**/*.apk'
        apksignerKeystoreFile: 'XamTrack.keystore'
        apksignerKeystorePassword: '$(AndroidKeyPassword)'
        apksignerKeystoreAlias: 'XamTrack'
        apksignerKeyPassword: '$(AndroidKeyPassword)'
    - task: CopyFiles@2
      inputs:
        Contents: 'XamTrack.Android/bin/Release/*.apk'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: InstallAppleProvisioningProfile@1
      inputs:
        provisioningProfileLocation: 'secureFiles'
        provProfileSecureFile: 'XamTrackWildCardInHouseDistribution.mobileprovision'

    - task: InstallAppleCertificate@2
      inputs:
        certSecureFile: 'XamTrackDistCert.p12'
        certPwd: '$(CertPassword)'
        keychain: 'temp'

    - script: echo Build XamTrack iOS!

    # - task: XamariniOS@2
    #   inputs:
    #     solutionFile: 'XamTrack.sln'
    #     configuration: '$(BuildConfiguration)'
    #     packageApp: true
    #     runNugetRestore: false
    
        
    - task: MSBuild@1
      displayName: 'Build  XamTrack.iOS App'
      inputs:
        solution: 'XamTrack.iOS/XamTrack.iOS.csproj'
        platform: 'iPhone'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:BuildIpa=true'
    
    - task: CopyFiles@2
      inputs:
        Contents: 'XamTrack.iOS/bin/iPhone/$(BuildConfiguration)/*.ipa'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  
- stage: DistributeAppCenter
  jobs: 
  - job: DistributeAppCenter
    displayName: Distribute to App Center
    pool:
      name: Hosted macOS
      vmImage: 'macOS-latest'
      demands:
      - xcode
      - Xamarin.iOS
      - msbuild

    steps:
    - script: echo Upload to App Center Distribute!

    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        targetPath: '$(Pipeline.Workspace)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Pipeline.Workspace)/drop'
        Contents: '**'
        TargetFolder: '$(Build.SourcesDirectory)'



    - task: AppCenterDistribute@3
      displayName: App Center Distribute iOS
      inputs:
        serverEndpoint: 'App Center'
        appSlug: 'Mobile-Customer-Advisory-Team/XamTrack.iOS'
        appFile: '$(Build.SourcesDirectory)/XamTrack.iOS/bin/iPhone/$(BuildConfiguration)/*.ipa'
        releaseNotesOption: 'input'
        releaseNotesInput: 'App Center Release'
        destinationType: 'groups'
        distributionGroupId: '4b21a1eb-88b1-49ef-9963-eb543c992e3e'

    - task: AppCenterDistribute@3
      displayName: App Center Distribute Droid
      inputs:
        serverEndpoint: 'App Center'
        appSlug: 'Mobile-Customer-Advisory-Team/XamTrack.Droid'
        appFile: '$(Build.SourcesDirectory)/XamTrack.Android/bin/Release/*.apk'
        releaseNotesOption: 'input'
        releaseNotesInput: 'App Center Release'
        destinationType: 'groups'
        distributionGroupId: 'c3dfaf6c-f459-43da-96df-d67b4967adeb' 